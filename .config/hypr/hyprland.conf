
################
### MONITORS ###
################

# See https://wiki.hyprland.org/Configuring/Monitors/
monitor=,preferred,auto,auto

###################
### MY PROGRAMS ###
###################

# See https://wiki.hyprland.org/Configuring/Keywords/

# Set programs that you use
$terminal = alacritty
$fileManager = thunar
# $menu = wofi --show drun
$menu = ~/.config/hypr/scripts/HyprLauncher.sh

#################
### AUTOSTART ###
#################

# Autostart necessary processes (like notifications daemons, status bars, etc.)
# Or execute your favorite apps at launch like this:

# exec-once = $terminal & $fileManager
# exec-once = nm-applet &
# exec-once = waybar & hyprpaper & firefox

# dh: thunar as daemon
exec-once = $fileManager --daemon

# dh: use waybar
exec-once = waybar -c ~/.config/waybar/config

# dh notifications with mako
exec-once = mako --config ~/.config/mako/config

# dh use hyprpaper as wallpaper app
exec-once = hyprpaper -c ~/.config/hypr/hyprpaper.conf

# hyprpm: reload // hyprexpo:expo plugin
exec-once = hyprpm reload -n

#############################
### ENVIRONMENT VARIABLES ###
#############################

# See https://wiki.hyprland.org/Configuring/Environment-variables/

env = XCURSOR_SIZE,24
env = HYPRCURSOR_SIZE,24

# dh
env = LIBVA_DRIVER_NAME,nvidia
env = XDG_SESSION_TYPE,wayland
env = GBM_BACKEND,nvidia-drm
env = __GLX_VENDOR_LIBRARY_NAME,nvidia
env = QT_QPA_PLATFORM,wayland
# nvidia/electron fix: package needed: libva-nvidia-driver
env = NVD_BACKEND,direct

# dh darkmode 
exec = gsettings set org.gnome.desktop.interface gtk-theme "Adwaita:dark"   # for GTK3 apps
exec = gsettings set org.gnome.desktop.interface color-scheme "prefer-dark"   # for GTK4 apps
# env = QT_QPA_PLATFORMTHEME,qt6ct   # for Qt apps

# nvidia
cursor {
   no_hardware_cursors = true
}

#####################
### LOOK AND FEEL ###
#####################

# Refer to https://wiki.hyprland.org/Configuring/Variables/

# https://wiki.hyprland.org/Configuring/Variables/#general
general { 
    gaps_in = 0
    gaps_out = 0
    border_size = 2 

    # https://wiki.hyprland.org/Configuring/Variables/#variable-types for info about colors
    col.active_border = rgba(33ccffee) rgba(00ff99ee) 45deg
    col.inactive_border = rgba(595959aa)

    # Set to true enable resizing windows by clicking and dragging on borders and gaps
    resize_on_border = true

    # Please see https://wiki.hyprland.org/Configuring/Tearing/ before you turn this on
    allow_tearing = false

    layout = dwindle
    # layout = master
}

# https://wiki.hyprland.org/Configuring/Variables/#decoration
decoration {
    rounding = 0

    # Change transparency of focused and unfocused windows
    active_opacity = 1.0
    # inactive_opacity = 0.8

    # drop_shadow = false
    # shadow_range = 10
    # shadow_render_power = 3
    # col.shadow = rgba(1a1a1aee)

    # https://wiki.hyprland.org/Configuring/Variables/#blur
    blur {
        enabled = true
        size = 3
        passes = 1       
        vibrancy = 0.1696
    }
}

# https://wiki.hyprland.org/Configuring/Variables/#animations
animations {
    enabled = true
    # Default animations, see https://wiki.hyprland.org/Configuring/Animations/ for more
    bezier = myBezier, 0.05, 0.9, 0.1, 1.05
    animation = windows, 1, 7, myBezier
    animation = windowsOut, 1, 7, default, popin 80%
    animation = border, 1, 10, default
    animation = borderangle, 1, 8, default
    animation = fade, 1, 7, default
    animation = workspaces, 1, 6, default
}

# See https://wiki.hyprland.org/Configuring/Dwindle-Layout/ for more
dwindle {
    pseudotile = true # Master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below
    preserve_split = true # You probably want this
    force_split = 0 # dont follow mouse
}

# See https://wiki.hyprland.org/Configuring/Master-Layout/ for more
master {
    new_status = inherit # master # slave, inherit
    orientation = left
    # mfact = 0.7
    # no_gaps_when_only = 0
}

# https://wiki.hyprland.org/Configuring/Variables/#misc
misc { 
    force_default_wallpaper = 0 # Set to 0 or 1 to disable the anime mascot wallpapers
    disable_hyprland_logo = true # If true disables the random hyprland logo / anime girl background. :(
    font_family = "Source Code Pro"
    # font_size = 14
    disable_hyprland_qtutils_check = true
}

# https://wiki.hyprland.org/Configuring/Tearing/
# general {
#     allow_tearing = true
# }
# windowrulev2 = immediate, class:^(xxx)$

#############
### INPUT ###
#############

# https://wiki.hyprland.org/Configuring/Variables/#input
input {
    kb_layout = us
    kb_variant =
    kb_model =
    kb_options =
    kb_rules =

    follow_mouse = 1 

    sensitivity = 0 # -1.0 - 1.0, 0 means no modification.

    repeat_rate = 25
    repeat_delay = 600

    touchpad {
        natural_scroll = false
    }
}

# https://wiki.hyprland.org/Configuring/Variables/#gestures
gestures {
    workspace_swipe = false
}

####################
### KEYBINDINGSS ###
##################z##

# See https://wiki.hyprland.org/Configuring/Keywords/
$mainMod = SUPER # Sets "Windows" key as main modifier

# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
bind = $mainMod, RETURN, exec, $terminal
binde = $mainMod, Q, killactive,
bind = $mainMod, M, exit,
bind = $mainMod, E, exec, $fileManager
bind = $mainMod, V, togglefloating,
bind = $mainMod, R, exec, $menu

# dwindle
bind = $mainMod, P, pseudo, # dwindle
bind = $mainMod, H, togglesplit, # dwindle
bind = $mainMod, J, swapsplit,

# Move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace SILENTLY (without switching to it. movetoworkspace) with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspacesilent, 1
bind = $mainMod SHIFT, 2, movetoworkspacesilent, 2
bind = $mainMod SHIFT, 3, movetoworkspacesilent, 3
bind = $mainMod SHIFT, 4, movetoworkspacesilent, 4
bind = $mainMod SHIFT, 5, movetoworkspacesilent, 5
bind = $mainMod SHIFT, 6, movetoworkspacesilent, 6
bind = $mainMod SHIFT, 7, movetoworkspacesilent, 7
bind = $mainMod SHIFT, 8, movetoworkspacesilent, 8
bind = $mainMod SHIFT, 9, movetoworkspacesilent, 9
bind = $mainMod SHIFT, 0, movetoworkspacesilent, 10

# Example special workspace (scratchpad)
bind = $mainMod, S, togglespecialworkspace, magic
bind = $mainMod SHIFT, S, movetoworkspace, special:magic

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# dh
bind = $mainMod, Tab, cyclenext,           # change focus to another window
bind = $mainMod, Tab, bringactivetotop,    # bring it to the top

bind = $mainMod, F, fullscreen, 0
bind = $mainMod SHIFT, F, fullscreen, 1

# dh
bind = $mainMod, page_up, workspace, e+1
bind = $mainMod, page_down, workspace, e-1

# dh move to workspace
bind = $mainMod SHIFT, page_up, movetoworkspace, e-1
bind = $mainMod SHIFT, page_down, movetoworkspace, e+1
bind = $mainMod SHIFT, left, movetoworkspace, e-1
bind = $mainMod SHIFT, right, movetoworkspace, e+1

# bind = $mainMod CTRL, left, workspace, e-1
# bind = $mainMod CTRL, right, workspace, e+1

# dh switch current workspace
# bind = $mainMod, left, workspace, e-1
# bind = $mainMod, right, workspace, e+1
# dh move focus 
bind = $mainMod, left, movefocus, left
bind = $mainMod, right, movefocus, right
# bind = $mainMod, left, layoutmsg, cycleprev
# bind = $mainMod, right, layoutmsg, cyclenext


bind = $mainMod SHIFT, H, movewindow, l
bind = $mainMod SHIFT, L, movewindow, r
bind = $mainMod SHIFT, K, movewindow, u
bind = $mainMod SHIFT, J, movewindow, d 

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# dh: use binde for repeating
binde = $mainMod, Comma, resizeactive, -10 0
binde = $mainMod, Period, resizeactive, 10 0
binde = $mainMod SHIFT, Comma, resizeactive, 0 10
binde = $mainMod SHIFT, Period, resizeactive, 0 -10

# dh GameMode From hyprland.org Wiki
# not really needed since the workspace rule 
# bind = $mainMod SHIFT, F11, exec, ~/.config/hypr/scripts/gamemode.sh
# bind = $mainMod CTRL, F12, exec, ~/.config/hypr/scripts/steam.sh

# dh: Steam always on Workspace 10
workspace = 10, decorate:false, rounding:false, gapsin:0, gapsout:0, border:false, shadow:false
# dh: open steam always in workspace 10
windowrulev2 = workspace 10, title:^(Steam)$

# dh unbind/bind all with (Mod)+Shift+F12
# bind = $mainMod SHIFT, F12, submap, clean
# submap = clean
# bind = $mainMod SHIFT CTRL, F12, submap, reset
# submap = reset

# dh screenlock
bind = $mainMod, L, exec, swaylock -f -c 000000

# dh: plugin hyprexpo
bind = $mainMod, grave, hyprexpo:expo, toggle # can be: toggle, off/disable or on/enable

plugin {
   hyprexpo {
       columns = 3
       gap_size = 5
       bg_col = rgb(111111)
       workspace_method = center current # [center/first] [workspace] e.g. first 1 or center m+1
   }
   
   # hyprwinwrap {
   #    # class is an EXACT match and NOT a regex!
   #    class = kitty-bg
   # }

   #hyprtrails {
   #    color = rgba(ffaa00ff)
   #}
}

# dh screenshot with grim and slurp
bind = SHIFT, Print, exec, grim -g "$(slurp -d)" - | wl-copy
bind = , Print, exec, grim $(xdg-user-dir PICTURES)/Screenshots/$(date +'%s_grim.png')

# dh headphones
bind = $mainMod, F1, exec, ~/.config/hypr/scripts/ap.sh

# dh backlight
# bind = , XF86MonBrightnessUp, exec, brightnessctl s +5%
# bind = , XF86MonBrightnessDown, exec, brightnessctl s 5%-
# binde = KEY_FN, xxx, exec, brightnessctl s +5%
# binde = KEY_FN, Minus, exec, brightnessctl s 5%-

# Volume and Media Control
binde = , XF86AudioRaiseVolume, exec, pamixer -i 5 
binde = , XF86AudioLowerVolume, exec, pamixer -d 5 
bind = , XF86AudioMicMute, exec, pamixer --default-source -m
bind = , XF86AudioMute, exec, pamixer -t
bind = , XF86AudioPlay, exec, playerctl play-pause
bind = , XF86AudioPause, exec, playerctl play-pause
bind = , XF86AudioNext, exec, playerctl next
bind = , XF86AudioPrev, exec, playerctl previous

##############################
### WINDOWS AND WORKSPACES ###
##############################

# See https://wiki.hyprland.org/Configuring/Window-Rules/ for more
# See https://wiki.hyprland.org/Configuring/Workspace-Rules/ for workspace rules
windowrulev2 = suppressevent maximize, class:.* # You'll probably like this.

# dh workspaces
# workspace = 1, defaultName:main, persistent:true
# workspace = 2, defaultName:web, persistent:true, decorate:false, gapsin:0, gapsout:0
# workspace = 3, defaultName:file, persistent:true
# workspace = 4, defaultName:dev, decorate:false, gapsin:0, gapsout:0
# workspace = 9, defaultName:music, gapsin:200, gapsout:200
# workspace = 10, defaultName:game, decorate:false, gapsin:0, gapsout:0, shadow:false, border:false

# dh: steam on workspace 10
windowrulev2 = workspace 10, class:^(steam)$
windowrulev2 = workspace 10, class:^(.*wlroots.*)$

# dh: floating windows floats
# windowrulev2 = float, class:^(.*Secrets.*)$
# windowrulev2 = size 500 800, class:^(.*Secrets.*)$
windowrulev2 = float, class:^(.*HyprLauncher.*)$
# windowrule = float,^(blueman-manager)$
# windowrule = float,^(nm-connection-editor)$

# dh: quake mode
bind = CTRL, grave, exec, $terminal --class Alacritty,dropdown -T alacritty-dropdown
windowrulev2 = float, title:^(alacritty-dropdown)$
# take 1/3 of the screen
windowrulev2 = size 100% 33%, title:^(alacritty-dropdown)$
# top of screen minus waybar size
windowrulev2 = move 0 32, title:^(alacritty-dropdown)$

# dh: resize window (from hyprland.org)
# will switch to a submap called resize
bind = $mainMod SHIFT, R, submap, resize
# will start a submap called "resize"
submap = resize
# sets repeatable binds for resizing the active window
binde = , right, resizeactive, 10 0
binde = , left, resizeactive, -10 0
binde = , up, resizeactive, 0 -10
binde = , down, resizeactive, 0 10
# use reset to go back to the global submap
bind = , escape, submap, reset
# will reset the submap, which will return to the global submap
submap = reset
# keybinds further down will be global again...

# dh Enable logs
# debug:disable_logs = false
